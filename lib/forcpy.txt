ElevatedButton(style: ElevatedButton.styleFrom(backgroundColor:Color.fromARGB(188, 88, 12, 88))

import 'package:flutter/material.dart';

class LoginScreen extends StatefulWidget {
  const LoginScreen({super.key});

  @override
  State<LoginScreen> createState() => _LoginScreenState();
}

class _LoginScreenState extends State<LoginScreen> {
  final TextEditingController userController = TextEditingController();
  String? ErrorText='';
  bool isError=true;
  String txt='';
  @override
 void dispose() {
    // TODO: implement dispose
    userController.dispose();
    super.dispose();
  }
  @override
  Widget build(BuildContext context) {
    return  Scaffold(
      backgroundColor: Colors.indigo[700],
      body: Container(
        decoration: const BoxDecoration(
         image:DecorationImage(
          image: NetworkImage('https://images.unsplash.com/photo-1688494930098-e88c53c26e3a?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=387&q=80'),
          fit: BoxFit.cover,
          opacity:0.6
         )
        ),
        child: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.end,
            
            children: [
              Container(
              height: 150,
              width: 150,
              child: Image.network('https://images-na.ssl-images-amazon.com/images/I/61KrNYlxCNL.png'),
              ),
              SizedBox(height: 100,),
               Container(
                height: 350,
                decoration: BoxDecoration(color: Colors.white,
                borderRadius: BorderRadius.circular(25),
                ),
                child: Column(
                  mainAxisAlignment: MainAxisAlignment.center,
                 
                  children: [
                    TextFormField(
                      validator: (value){
                        if(value==null || value.isEmpty){
                          return "error";
                        }
                        else{
                          return null;
                        }
                      },
                      controller: userController,
                      keyboardType: TextInputType.emailAddress,
                      decoration: InputDecoration(
                        border: InputBorder.none,
                        hintText: 'Username',
                        labelText: 'Enter Your username',
                        prefixIcon: Icon(Icons.person),
                      ),
                    ),
                    const SizedBox(height: 20,),
                    Container(
                      width: 100,
                      child: ElevatedButton(onPressed: (){
                          if(txt.isNotEmpty){
                          Navigator.pushNamed(context, 'categoriesscreen',arguments: userController.text );
                          userController.clear();
                          }
                      }, child: Text('Login'))),
                      const SizedBox(height: 10,),
                    
                  ],
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}